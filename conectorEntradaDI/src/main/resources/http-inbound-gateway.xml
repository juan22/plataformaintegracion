<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:http="http://www.springframework.org/schema/integration/http"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-5.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-5.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-5.0.xsd">
	
	<bean id="amqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
		<constructor-arg ref="rabbitConnectionFactory" />
	</bean>
	
	<bean id="conectorController"
		class="com.proyectogrado.pi.conectorEntradaDI.ConectorController" />

<!-- 	http gateway, procesa request y responses del cliente -->
	<http:inbound-gateway id="inboundGatewayConector"
		request-channel="inputChannel" 
		reply-channel="outputChannel"
		path="/recibirMensaje"
		mapped-request-headers="idSol, HTTP_REQUEST_HEADERS" 
		supported-methods="POST" 
		reply-timeout="10000" >
 		 	<http:request-mapping consumes="text/plain" produces="text/plain" />			 
	</http:inbound-gateway>

	<int:channel id="outputChannel" ></int:channel>
	<int:channel id="inputChannel"  datatype="java.lang.String"></int:channel>

<!-- 	agregamos los headers paso, idMensaje y tipoComposicion
		ademas el metodo captureReplyChannel obtiene el replyChannel anonimo asignado al request y se almacena en un HashMap	 -->
	<int:header-enricher input-channel="inputChannel" output-channel="routerChannel">      
        	<int:header name="paso" value="1" />
        	<int:header name="idMensaje" method="captureReplyChannel" ref="conectorController" />
        	<int:header name="tipoComposicion" method="setTipoComposicion" ref="conectorController" />
    </int:header-enricher>
	
<!-- 	se rutea al broker o al orquestador, dependiendo de la solucion -->
	<int:header-value-router input-channel="routerChannel" header-name="tipoComposicion">
		<int:mapping value="coreografia" channel="coreografiaChannel"/>
		<int:mapping value="orquestacion" channel="orquestacionChannel"/>
	</int:header-value-router>
	
<!-- 	se envia el mensaje al broker -->
	<int:channel id="coreografiaChannel" datatype="java.lang.String"></int:channel>
	<int-amqp:outbound-channel-adapter 
		mapped-request-headers="idSol, paso, idMensaje, STANDARD_REQUEST_HEADERS" 
		channel="coreografiaChannel"
		exchange-name="conector1MessagesS1" >
	</int-amqp:outbound-channel-adapter>
	
<!-- 	se envia el mensaje al orquestador -->
	<int:channel id="orquestacionChannel" datatype="java.lang.String"></int:channel>
	<int:service-activator id="gatewayOrquestador"
					input-channel="orquestacionChannel"
					output-channel="inputBroker"
					ref="conectorController"
					method="ejecutarServicioOrquestacion"
					
					send-timeout="60000"/>
<!-- requires-reply="true" -->

<!-- 	********************************************************** -->
<!-- 	**** se procesa la respuesta del orquestador o broker **** -->
<!-- 	********************************************************** -->
	
<!-- 	se recibe mensaje del broker -->
	<int-amqp:inbound-channel-adapter 
		mapped-request-headers="idMensaje"
		channel="inputBroker"
		queue-names="conector1Queue" />
	
	
	
	<int:channel id="inputBroker" ></int:channel>
	  
<!-- 	se setea el replyChannel de acuerdo al idMensaje y header almacenado anteriormente -->
	<int:header-enricher input-channel="inputBroker" output-channel="outputChannel" >    
           	<int:reply-channel method="getReplyChannel" ref="conectorController" />
    </int:header-enricher>    
	
    <!-- 	********************************************************** -->
    <!-- 	*********************************************************** -->
    <!-- 	********************************************************** -->
    
	<!-- configuracion de rabbit, exchanges, queues, and bindings -->
	
	<rabbit:topic-exchange 
		name="conector1MessagesS1" 
		durable="true">
	</rabbit:topic-exchange>
	
	<rabbit:queue name="conector1Queue" durable="true"  ></rabbit:queue>

	<rabbit:topic-exchange name="transformacionMessagesFinalS1" >
		<rabbit:bindings>
			<rabbit:binding queue="conector1Queue" pattern="#"/>
		</rabbit:bindings>
	</rabbit:topic-exchange>

	
</beans>
